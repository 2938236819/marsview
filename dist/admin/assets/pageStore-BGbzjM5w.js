import{g as I}from"./_commonjsHelpers-BosuxZz1.js";import{p as O}from"./immer-DZPz5TFl.js";var j={BASE_URL:"/",DEV:!1,MODE:"production",PROD:!0,SSR:!1};const h=e=>{let t;const n=new Set,o=(s,f)=>{const c=typeof s=="function"?s(t):s;if(!Object.is(c,t)){const i=t;t=f??(typeof c!="object"||c===null)?c:Object.assign({},t,c),n.forEach(a=>a(t,i))}},r=()=>t,S={setState:o,getState:r,getInitialState:()=>v,subscribe:s=>(n.add(s),()=>n.delete(s)),destroy:()=>{(j?"production":void 0)!=="production"&&console.warn("[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected."),n.clear()}},v=t=e(o,r,S);return S},V=e=>e?h(e):h;var x={exports:{}},b={},D={exports:{}},R={};/**
 * @license React
 * use-sync-external-store-shim.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var d=window.React;function $(e,t){return e===t&&(e!==0||1/e===1/t)||e!==e&&t!==t}var P=typeof Object.is=="function"?Object.is:$,A=d.useState,T=d.useEffect,W=d.useLayoutEffect,q=d.useDebugValue;function C(e,t){var n=t(),o=A({inst:{value:n,getSnapshot:t}}),r=o[0].inst,u=o[1];return W(function(){r.value=n,r.getSnapshot=t,m(r)&&u({inst:r})},[e,n,t]),T(function(){return m(r)&&u({inst:r}),e(function(){m(r)&&u({inst:r})})},[e]),q(n),n}function m(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!P(e,n)}catch{return!0}}function U(e,t){return t()}var z=typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"?U:C;R.useSyncExternalStore=d.useSyncExternalStore!==void 0?d.useSyncExternalStore:z;D.exports=R;var B=D.exports;/**
 * @license React
 * use-sync-external-store-shim/with-selector.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var E=window.React,F=B;function L(e,t){return e===t&&(e!==0||1/e===1/t)||e!==e&&t!==t}var M=typeof Object.is=="function"?Object.is:L,k=F.useSyncExternalStore,N=E.useRef,G=E.useEffect,H=E.useMemo,J=E.useDebugValue;b.useSyncExternalStoreWithSelector=function(e,t,n,o,r){var u=N(null);if(u.current===null){var l={hasValue:!1,value:null};u.current=l}else l=u.current;u=H(function(){function S(i){if(!v){if(v=!0,s=i,i=o(i),r!==void 0&&l.hasValue){var a=l.value;if(r(a,i))return f=a}return f=i}if(a=f,M(s,i))return a;var y=o(i);return r!==void 0&&r(a,y)?a:(s=i,f=y)}var v=!1,s,f,c=n===void 0?null:n;return[function(){return S(t())},c===null?void 0:function(){return S(c())}]},[t,n,o,r]);var p=k(e,u[0],u[1]);return G(function(){l.hasValue=!0,l.value=p},[p]),J(p),p};x.exports=b;var K=x.exports;const Q=I(K);var _={BASE_URL:"/",DEV:!1,MODE:"production",PROD:!0,SSR:!1};const X=window.React,{useDebugValue:Y}=X,{useSyncExternalStoreWithSelector:Z}=Q;let w=!1;const ee=e=>e;function te(e,t=ee,n){(_?"production":void 0)!=="production"&&n&&!w&&(console.warn("[DEPRECATED] Use `createWithEqualityFn` instead of `create` or use `useStoreWithEqualityFn` instead of `useStore`. They can be imported from 'zustand/traditional'. https://github.com/pmndrs/zustand/discussions/1937"),w=!0);const o=Z(e.subscribe,e.getState,e.getServerState||e.getInitialState,t,n);return Y(o),o}const g=e=>{(_?"production":void 0)!=="production"&&typeof e!="function"&&console.warn("[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`.");const t=typeof e=="function"?V(e):e,n=(o,r)=>te(t,o,r);return Object.assign(n,t),n},ne=e=>e?g(e):g,ue=ne(e=>({userInfo:{userId:0,userName:"",identifier:""},saveUserInfo:t=>e(O(n=>{n.userInfo=t}))}));export{ne as c,ue as u};
